name: Deploy Frontend (S3 + CloudFront)

on:
  push:
    branches: ["main"]
    paths:
      - "**/*.ts"
      - "**/*.tsx"
      - "**/*.js"
      - "**/*.jsx"
      - "**/*.css"
      - "**/*.scss"
      - "**/*.html"
      - "package.json"
      - "pnpm-lock.yaml"
      - "yarn.lock"
      - "vite.config.*"
      - ".github/workflows/deploy-frontend.yml"

permissions:
  id-token: write # OIDC
  contents: read

concurrency:
  group: frontend-prod
  cancel-in-progress: true

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  S3_BUCKET: ${{ vars.S3_BUCKET }}
  CF_DIST_ID: ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}

jobs:
  build-and-deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Build (Vite)
        run: npm run build

      - name: Debug OIDC subject
        uses: actions/github-script@v7
        with:
          script: |
            const core = require('@actions/core');
            const idt = await core.getIDToken('sts.amazonaws.com');
            const payload = JSON.parse(Buffer.from(idt.split('.')[1], 'base64').toString());
            console.log('OIDC sub:', payload.sub);
            console.log('OIDC aud:', payload.aud);
            console.log('github.repository:', process.env.GITHUB_REPOSITORY);
            console.log('github.ref:', process.env.GITHUB_REF);

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ vars.FRONTEND_ROLE_ARN }}
          role-session-name: github-frontend-deploy

      - name: Sync to S3
        run: |
          aws s3 sync ./dist s3://$S3_BUCKET \
            --delete \
            --cache-control max-age=31536000,public \
            --exclude "index.html"
          aws s3 cp ./dist/index.html s3://$S3_BUCKET/index.html \
            --cache-control max-age=60,public \
            --content-type text/html

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "$CF_DIST_ID" \
            --paths "/index.html" "/assets/*"
